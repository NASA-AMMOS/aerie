plugins {
  id 'java-library'
  id 'jacoco'
  id 'maven-publish'
  id 'org.jetbrains.kotlin.jvm' version '2.0.20'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

test {
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
  }
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

dependencies {
  api 'com.apollographql.apollo:apollo-api:2.5.14'
  compileOnly project(':merlin-driver')
  compileOnly project(':constraints')

  implementation 'org.apache.commons:commons-lang3:3.13.0'
  implementation 'com.google.guava:guava:32.1.2-jre'
  implementation 'org.jgrapht:jgrapht-core:1.5.2'
  implementation 'org.jgrapht:jgrapht-io:1.5.2'
  implementation 'org.jgrapht:jgrapht-ext:1.5.2'
  implementation 'org.slf4j:slf4j-simple:2.0.7'
  implementation 'org.apache.commons:commons-collections4:4.4'
  implementation project(':merlin-framework')
  implementation project(':type-utils')


  implementation project(':procedural:scheduling')
  implementation project(':procedural:timeline')

  testImplementation project(':merlin-framework-junit')
  testImplementation project(':constraints')
  testImplementation project(':examples:banananation')
  testImplementation project(':examples:foo-missionmodel')
  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
  testImplementation 'com.google.guava:guava-testlib:32.1.2-jre'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
  publications {
    library(MavenPublication) {
      version = findProperty('publishing.version')
      from components.java
    }
  }

  publishing {
    repositories {
      maven {
        name = findProperty("publishing.name")
        url = findProperty("publishing.url")
        credentials {
          username = System.getenv(findProperty("publishing.usernameEnvironmentVariable"))
          password = System.getenv(findProperty("publishing.passwordEnvironmentVariable"))
        }
      }
    }
  }
}
repositories {
  mavenCentral()
}
