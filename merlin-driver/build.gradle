plugins {
  id 'java-library'
  id 'maven-publish'
  id 'jacoco'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }

  withJavadocJar()
  withSourcesJar()
}

test {
  useJUnitPlatform {
    includeEngines 'jqwik', 'junit-jupiter'
  }
  testLogging {
    exceptionFormat = 'full'
  }
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

// Link references to standard Java classes to the official Java 11 documentation.
javadoc.options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
javadoc.options.links 'https://commons.apache.org/proper/commons-lang/javadocs/api-3.9/'
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

dependencies {
  implementation project(":merlin-driver-protocol")
  implementation project(':parsing-utilities')

  api project(':merlin-sdk')
  api 'org.glassfish:javax.json:1.1.4'
  implementation project(':type-utils')
  implementation 'it.unimi.dsi:fastutil:8.5.12'
  implementation 'org.slf4j:slf4j-simple:2.0.7'

  testImplementation project(':merlin-framework')
  testImplementation project(':merlin-framework-junit')
  testImplementation project(':contrib')
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
  testImplementation "net.jqwik:jqwik:1.6.5"
  implementation 'com.google.guava:guava:32.1.2-jre'
  testImplementation 'com.google.guava:guava-testlib:32.1.2-jre'

  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
  publications {
    library(MavenPublication) {
      version = findProperty('publishing.version')
      from components.java
    }
  }

  publishing {
    repositories {
      maven {
        name = findProperty("publishing.name")
        url = findProperty("publishing.url")
        credentials {
          username = System.getenv(findProperty("publishing.usernameEnvironmentVariable"))
          password = System.getenv(findProperty("publishing.passwordEnvironmentVariable"))
        }
      }
    }
  }
}
