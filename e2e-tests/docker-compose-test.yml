# This compose file is used for end-to-end testing the Aerie services.
# See .github/workflows/test.yml for how this file is utilized.

version: '3.7'
services:
  aerie_gateway:
    container_name: aerie_gateway
    depends_on: ['postgres']
    environment:
      AUTH_TYPE: none
      GQL_API_URL: http://localhost:8080/v1/graphql
      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      LOG_FILE: console
      LOG_LEVEL: debug
      NODE_TLS_REJECT_UNAUTHORIZED: '0'
      PORT: 9000
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      GATEWAY_DB_USER: "${GATEWAY_USERNAME}"
      GATEWAY_DB_PASSWORD: "${GATEWAY_PASSWORD}"
    image: 'ghcr.io/nasa-ammos/aerie-gateway:develop'
    ports: ['9000:9000']
    restart: always
    volumes:
      - aerie_file_store:/app/files
  aerie_merlin:
    build:
      context: ./../merlin-server
      dockerfile: Dockerfile
    container_name: aerie_merlin
    depends_on: ['postgres']
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      MERLIN_DB_USER: "${MERLIN_USERNAME}"
      MERLIN_DB_PASSWORD: "${MERLIN_PASSWORD}"
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      MERLIN_PORT: 27183
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: '2000-01-01T11:58:55.816Z'
    image: aerie_merlin
    ports: ['27183:27183', '5005:5005']
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store
  aerie_scheduler:
    build:
      context: ./../scheduler-server
      dockerfile: Dockerfile
    container_name: aerie_scheduler
    depends_on: ['aerie_merlin', 'postgres']
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      SCHEDULER_DB_USER: "${SCHEDULER_USERNAME}"
      SCHEDULER_DB_PASSWORD: "${SCHEDULER_PASSWORD}"
      SCHEDULER_PORT: 27185
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    image: aerie_scheduler
    ports: ['27185:27185', '5006:5005']
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store
  aerie_sequencing:
    build:
      context: ./../sequencing-server
      dockerfile: Dockerfile
    container_name: aerie_sequencing
    depends_on: ['postgres']
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      LOG_FILE: console
      LOG_LEVEL: debug
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      SEQUENCING_SERVER_PORT: 27184
      AERIE_DB_NAME: aerie
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      SEQUENCING_DB_USER: "${SEQUENCING_USERNAME}"
      SEQUENCING_DB_PASSWORD: "${SEQUENCING_PASSWORD}"
      SEQUENCING_LOCAL_STORE: /usr/src/app/sequencing_file_store
    image: aerie_sequencing
    ports: ['27184:27184']
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/sequencing_file_store
  aerie_ui:
    container_name: aerie_ui
    depends_on: ['postgres']
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: '0'
      ORIGIN: http://localhost
      PUBLIC_AERIE_FILE_STORE_PREFIX: "/usr/src/app/merlin_file_store/"
      PUBLIC_GATEWAY_CLIENT_URL: http://localhost:9000
      PUBLIC_GATEWAY_SERVER_URL: http://aerie_gateway:9000
      PUBLIC_HASURA_CLIENT_URL: http://localhost:8080/v1/graphql
      PUBLIC_HASURA_SERVER_URL: http://hasura:8080/v1/graphql
      PUBLIC_HASURA_WEB_SOCKET_URL: ws://localhost:8080/v1/graphql
    image: 'ghcr.io/nasa-ammos/aerie-ui:develop'
    ports: ['80:80']
    restart: always
  aerie_merlin_worker_1:
    build:
      context: ./../merlin-worker
      dockerfile: Dockerfile
    container_name: aerie_merlin_worker_1
    depends_on: ['postgres']
    environment:
      AERIE_DB_NAME: aerie
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      MERLIN_DB_USER: "${MERLIN_USERNAME}"
      MERLIN_DB_PASSWORD: "${MERLIN_PASSWORD}"
      MERLIN_WORKER_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: '2000-01-01T11:58:55.816Z'
    ports: ['5007:5005', '27187:8080']
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie_merlin_worker_2:
    build:
      context: ./../merlin-worker
      dockerfile: Dockerfile
    container_name: aerie_merlin_worker_2
    depends_on: ['postgres']
    environment:
      AERIE_DB_NAME: aerie
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      MERLIN_DB_USER: "${MERLIN_USERNAME}"
      MERLIN_DB_PASSWORD: "${MERLIN_PASSWORD}"
      MERLIN_WORKER_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
      UNTRUE_PLAN_START: '2000-01-01T11:58:55.816Z'
    ports: ['5008:5005', '27188:8080']
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie_scheduler_worker_1:
    build:
      context: ./../scheduler-worker
      dockerfile: Dockerfile
    container_name: aerie_scheduler_worker_1
    depends_on: ["postgres"]
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      AERIE_DB_NAME: aerie
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      SCHEDULER_DB_USER: "${SCHEDULER_USERNAME}"
      SCHEDULER_DB_PASSWORD: "${SCHEDULER_PASSWORD}"
      SCHEDULER_OUTPUT_MODE: UpdateInputPlanWithNewActivities
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    ports: ["5009:5005", "27189:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  aerie_scheduler_worker_2:
    build:
      context: ./../scheduler-worker
      dockerfile: Dockerfile
    container_name: aerie_scheduler_worker_2
    depends_on: ["postgres"]
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      MERLIN_GRAPHQL_URL: http://hasura:8080/v1/graphql
      AERIE_DB_HOST: postgres
      AERIE_DB_PORT: 5432
      SCHEDULER_DB_USER: "${SCHEDULER_USERNAME}"
      SCHEDULER_DB_PASSWORD: "${SCHEDULER_PASSWORD}"
      SCHEDULER_OUTPUT_MODE: UpdateInputPlanWithNewActivities
      MERLIN_LOCAL_STORE: /usr/src/app/merlin_file_store
      JAVA_OPTS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
        -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG
        -Dorg.slf4j.simpleLogger.log.com.zaxxer.hikari=INFO
        -Dorg.slf4j.simpleLogger.logFile=System.err
    ports: ["5010:5005", "27190:8080"]
    restart: always
    volumes:
      - aerie_file_store:/usr/src/app/merlin_file_store:ro
  hasura:
    container_name: hasura
    depends_on: ['postgres']
    environment:
      AERIE_DATABASE_URL: "postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie?options=-c%20search_path%3Dutil_functions%2Chasura%2Cpermissions%2Ctags%2Cmerlin%2Cscheduler%2Csequencing%2Cpublic"
      AERIE_MERLIN_URL: "http://aerie_merlin:27183"
      AERIE_SCHEDULER_URL: "http://aerie_scheduler:27185"
      AERIE_SEQUENCING_URL: "http://aerie_sequencing:27184"
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_JWT_SECRET: "${HASURA_GRAPHQL_JWT_SECRET}"
      HASURA_GRAPHQL_LOG_LEVEL: info
      HASURA_GRAPHQL_METADATA_DATABASE_URL: 'postgres://${AERIE_USERNAME}:${AERIE_PASSWORD}@postgres:5432/aerie_hasura'
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
    image: 'hasura/graphql-engine:v2.12.1.cli-migrations-v3'
    ports: ['8080:8080']
    restart: always
    volumes:
      - ./../deployment/hasura/metadata:/hasura-metadata
  postgres:
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_USER: '${POSTGRES_USER}'
      AERIE_USERNAME: '${AERIE_USERNAME}'
      AERIE_PASSWORD: '${AERIE_PASSWORD}'
      GATEWAY_DB_USER: "${GATEWAY_USERNAME}"
      GATEWAY_DB_PASSWORD: "${GATEWAY_PASSWORD}"
      MERLIN_DB_USER: "${MERLIN_USERNAME}"
      MERLIN_DB_PASSWORD: "${MERLIN_PASSWORD}"
      SCHEDULER_DB_USER: "${SCHEDULER_USERNAME}"
      SCHEDULER_DB_PASSWORD: "${SCHEDULER_PASSWORD}"
      SEQUENCING_DB_USER: "${SEQUENCING_USERNAME}"
      SEQUENCING_DB_PASSWORD: "${SEQUENCING_PASSWORD}"
    image: postgres:16.4
    ports: ['5432:5432']
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./../deployment/postgres-init-db:/docker-entrypoint-initdb.d

volumes:
  aerie_file_store:
  postgres_data:
