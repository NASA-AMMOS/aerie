plugins {
  id 'java-library'
  id 'jacoco'
  id 'gov.nasa.ammos.aerie.procedural.plugin' version '0.1.0'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

test {
  onlyIf { false }
}

task e2eTest(type: Test) {
  ext.parseEnvFile = { filePath ->
    file(filePath).readLines().each() {
      if (!it.isEmpty() && !it.startsWith("#")) {
        def (key, value) = it.tokenize('=')
        if (key.startsWith("export ")) {
          key = key.split("export ")[1];
        }
        if (System.getenv(key) == null) {
          environment key, value
        }
      }
    }
  }

  dependsOn ":examples:banananation:assemble"
  dependsOn ":examples:foo-missionmodel:assemble"

  if(file('.env').exists()) {
    parseEnvFile('.env')
  } else if(file('../.env').exists()){
    parseEnvFile('../.env')
  }
  environment "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD", 1
  // Run the tests in parallel to improve performance
  maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

dependencies {
  testImplementation project(":procedural:remote")
  testImplementation "com.zaxxer:HikariCP:5.1.0"
  testImplementation("org.postgresql:postgresql:42.6.0")

  testImplementation 'com.microsoft.playwright:playwright:1.37.0'

  testImplementation 'org.glassfish:javax.json:1.1.4'
  testImplementation 'org.apache.commons:commons-lang3:3.13.0'

  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
}
