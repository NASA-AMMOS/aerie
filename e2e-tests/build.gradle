plugins {
  id 'java-library'
  id 'jacoco'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

task e2eTest(type: Test) {
  dependsOn ":examples:banananation:assemble"

  if(file('.env').exists()) {
    file('.env').readLines().each() {
      def (key, value) = it.tokenize('=')
      environment key, value
    }
  } else if(file('../.env').exists()){
    file('../.env').readLines().each() {
      def (key, value) = it.tokenize('=')
      environment key, value
    }
  }
  environment "PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD", 1
  // Run the tests in parallel to improve performance
  maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  useJUnitPlatform()
}

dependencies {
  testImplementation 'com.microsoft.playwright:playwright:1.37.0'

  testImplementation 'org.glassfish:javax.json:1.1.4'
  testImplementation 'org.apache.commons:commons-lang3:3.13.0'

  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
}
