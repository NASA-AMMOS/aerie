import java.nio.file.Path

plugins {
  id 'java'
  id 'java-test-fixtures'
  id 'application'
  id 'jacoco'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

application {
  mainClass = 'gov.nasa.jpl.aerie.scheduler.server.SchedulerAppDriver'
  applicationDefaultJvmArgs = ['-Xmx2g']
}

dependencies {
  implementation project(':merlin-driver')
  implementation project(':parsing-utilities')
  implementation project(':permissions')
  implementation project(':constraints')
  implementation project(':scheduler-driver')
  implementation project(':procedural:timeline')
  implementation project(':procedural:scheduling')
  implementation project(':type-utils')

  implementation 'io.javalin:javalin:5.6.3'
  implementation 'org.eclipse:yasson:3.0.3'

  implementation 'org.postgresql:postgresql:42.6.1'
  implementation 'com.zaxxer:HikariCP:5.0.1'

  testImplementation project(':examples:foo-missionmodel')
  testImplementation project(':merlin-framework')
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'

  testFixturesImplementation project(':merlin-driver')

  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

processResources {
  dependsOn ":scheduler-worker:copyConstraintsTypescript"
  // Copy in scheduling DSL compiler static libraries when processing resources
  from project(':scheduler-worker').projectDir.toPath().resolve(Path.of('scheduling-dsl-compiler', 'src', 'libs'))
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}
