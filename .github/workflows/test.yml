name: test

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
    tags:
      - v*

jobs:
  test:
    runs-on: ubuntu-latest
    environment: e2e-test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "19"
      - name: Setup Postgres Client (psql)
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: ./gradlew assemble
      - name: Validate Docker Configurations
        # `docker-compose` and `docker compose` have different "leniencies"
        run: |
          find . -name docker-compose\*.yml | while read -r file; do \
            echo "$file"; \
            docker-compose -f "$file" config -q && \
            docker compose -f "$file" config -q; \
          done
      - name: Start Services
        run: |
          docker compose -f ./e2e-tests/docker-compose-test.yml up -d --build
          docker images
          docker ps -a
        env:
          AERIE_USERNAME: "${{secrets.AERIE_USERNAME}}"
          AERIE_PASSWORD: "${{secrets.AERIE_PASSWORD}}"
          POSTGRES_USER: "${{secrets.POSTGRES_USER}}"
          POSTGRES_PASSWORD: "${{secrets.POSTGRES_PASSWORD}}"
      - name: Sleep for 15 Seconds
        run: sleep 15s
        shell: bash
      - name: Run Unit Tests
        run: ./gradlew test
      - name: Run E2E Tests
        run: ./gradlew e2eTest
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: |
            "${{ github.workspace }}/**/build/test-results/test"
            "${{ github.workspace }}/**/build/reports/tests/test"
            "${{ github.workspace }}/**/e2e-tests/test-results"
            "${{ github.workspace }}/**/sequencing-server/test-report.html"
      - name: Print Logs for Services
        run: docker compose -f ./e2e-tests/docker-compose-test.yml logs -t
      - name: Stop Services
        run: |
          docker ps -a
          docker compose -f ./e2e-tests/docker-compose-test.yml down
          docker ps -a
      - name: Prune Volumes
        run: docker volume prune --force
