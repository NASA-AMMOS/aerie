// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package gov.nasa.jpl.aerie.scheduler.aerie;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import gov.nasa.jpl.aerie.scheduler.aerie.type.CustomType;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class ActivityTypesQuery
    implements Query<ActivityTypesQuery.Data, ActivityTypesQuery.Data, ActivityTypesQuery.Variables>
{
  public static final String OPERATION_ID = "961baf9169e67fefdc1b821df5ba3b0f05482539cf150a4194d2f8dbbfc8a6a7";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
      "query ActivityTypes($adaptationId: ID!) {\n"
      + "  activityTypes(adaptationId: $adaptationId) {\n"
      + "    __typename\n"
      + "    name\n"
      + "    parameters {\n"
      + "      __typename\n"
      + "      name\n"
      + "      default\n"
      + "      schema\n"
      + "    }\n"
      + "  }\n"
      + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "ActivityTypes";
    }
  };

  private final Variables variables;

  public ActivityTypesQuery(@NotNull String adaptationId) {
    Utils.checkNotNull(adaptationId, "adaptationId == null");
    variables = new Variables(adaptationId);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public Data wrapData(Data data) {
    return data;
  }

  @Override
  public Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<Data> parse(
      @NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException
  {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(
      @NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException
  {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final BufferedSource source) throws
                                                                    IOException
  {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<Data> parse(@NotNull final ByteString byteString) throws
                                                                    IOException
  {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(
      final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters)
  {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    private @NotNull String adaptationId;

    Builder() {
    }

    public Builder adaptationId(@NotNull String adaptationId) {
      this.adaptationId = adaptationId;
      return this;
    }

    public ActivityTypesQuery build() {
      Utils.checkNotNull(adaptationId, "adaptationId == null");
      return new ActivityTypesQuery(adaptationId);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String adaptationId;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String adaptationId) {
      this.adaptationId = adaptationId;
      this.valueMap.put("adaptationId", adaptationId);
    }

    public @NotNull
    String adaptationId() {
      return adaptationId;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeCustom("adaptationId", gov.nasa.jpl.aerie.scheduler.aerie.type.CustomType.ID, adaptationId);
        }
      };
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
        ResponseField.forList("activityTypes", "activityTypes", new UnmodifiableMapBuilder<String, Object>(1)
            .put("adaptationId", new UnmodifiableMapBuilder<String, Object>(2)
                .put("kind", "Variable")
                .put("variableName", "adaptationId")
                .build())
            .build(), false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull List<ActivityType> activityTypes;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@NotNull List<ActivityType> activityTypes) {
      this.activityTypes = Utils.checkNotNull(activityTypes, "activityTypes == null");
    }

    public @NotNull
    List<ActivityType> activityTypes() {
      return this.activityTypes;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], activityTypes, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((ActivityType) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
                    + "activityTypes=" + activityTypes
                    + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return this.activityTypes.equals(that.activityTypes);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= activityTypes.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final ActivityType.Mapper activityTypeFieldMapper = new ActivityType.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<ActivityType> activityTypes = reader.readList(
            $responseFields[0],
            new ResponseReader.ListReader<ActivityType>() {
              @Override
              public ActivityType read(ResponseReader.ListItemReader listItemReader) {
                return listItemReader.readObject(new ResponseReader.ObjectReader<ActivityType>() {
                  @Override
                  public ActivityType read(ResponseReader reader) {
                    return activityTypeFieldMapper.map(reader);
                  }
                });
              }
            });
        return new Data(activityTypes);
      }
    }
  }

  public static class ActivityType {
    static final ResponseField[] $responseFields = {
        ResponseField.forString(
            "__typename",
            "__typename",
            null,
            false,
            Collections.<ResponseField.Condition>emptyList()),
        ResponseField.forString("name", "name", null, false, Collections.<ResponseField.Condition>emptyList()),
        ResponseField.forList("parameters", "parameters", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String name;

    final @NotNull List<Parameter> parameters;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public ActivityType(
        @NotNull String __typename, @NotNull String name,
        @NotNull List<Parameter> parameters)
    {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.name = Utils.checkNotNull(name, "name == null");
      this.parameters = Utils.checkNotNull(parameters, "parameters == null");
    }

    public @NotNull
    String __typename() {
      return this.__typename;
    }

    public @NotNull
    String name() {
      return this.name;
    }

    public @NotNull
    List<Parameter> parameters() {
      return this.parameters;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], name);
          writer.writeList($responseFields[2], parameters, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((Parameter) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "ActivityType{"
                    + "__typename=" + __typename + ", "
                    + "name=" + name + ", "
                    + "parameters=" + parameters
                    + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof ActivityType) {
        ActivityType that = (ActivityType) o;
        return this.__typename.equals(that.__typename)
               && this.name.equals(that.name)
               && this.parameters.equals(that.parameters);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= name.hashCode();
        h *= 1000003;
        h ^= parameters.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<ActivityType> {
      final Parameter.Mapper parameterFieldMapper = new Parameter.Mapper();

      @Override
      public ActivityType map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String name = reader.readString($responseFields[1]);
        final List<Parameter> parameters = reader.readList(
            $responseFields[2],
            new ResponseReader.ListReader<Parameter>() {
              @Override
              public Parameter read(ResponseReader.ListItemReader listItemReader) {
                return listItemReader.readObject(new ResponseReader.ObjectReader<Parameter>() {
                  @Override
                  public Parameter read(ResponseReader reader) {
                    return parameterFieldMapper.map(reader);
                  }
                });
              }
            });
        return new ActivityType(__typename, name, parameters);
      }
    }
  }

  public static class Parameter {
    static final ResponseField[] $responseFields = {
        ResponseField.forString(
            "__typename",
            "__typename",
            null,
            false,
            Collections.<ResponseField.Condition>emptyList()),
        ResponseField.forString("name", "name", null, false, Collections.<ResponseField.Condition>emptyList()),
        ResponseField.forCustomType(
            "default",
            "default",
            null,
            true,
            CustomType.ACTIVITYTYPEPARAMETERDEFAULT,
            Collections.<ResponseField.Condition>emptyList()),
        ResponseField.forCustomType(
            "schema",
            "schema",
            null,
            true,
            CustomType.ACTIVITYTYPEPARAMETERSCHEMA,
            Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String name;

    final @Nullable Object default_;

    final @Nullable Object schema;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Parameter(
        @NotNull String __typename, @NotNull String name, @Nullable Object default_,
        @Nullable Object schema)
    {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.name = Utils.checkNotNull(name, "name == null");
      this.default_ = default_;
      this.schema = schema;
    }

    public @NotNull
    String __typename() {
      return this.__typename;
    }

    public @NotNull
    String name() {
      return this.name;
    }

    public @Nullable
    Object default_() {
      return this.default_;
    }

    public @Nullable
    Object schema() {
      return this.schema;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], name);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[2], default_);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[3], schema);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Parameter{"
                    + "__typename=" + __typename + ", "
                    + "name=" + name + ", "
                    + "default_=" + default_ + ", "
                    + "schema=" + schema
                    + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Parameter) {
        Parameter that = (Parameter) o;
        return this.__typename.equals(that.__typename)
               && this.name.equals(that.name)
               && ((this.default_ == null) ? (that.default_ == null) : this.default_.equals(that.default_))
               && ((this.schema == null) ? (that.schema == null) : this.schema.equals(that.schema));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= name.hashCode();
        h *= 1000003;
        h ^= (default_ == null) ? 0 : default_.hashCode();
        h *= 1000003;
        h ^= (schema == null) ? 0 : schema.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Parameter> {
      @Override
      public Parameter map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String name = reader.readString($responseFields[1]);
        final Object default_ = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[2]);
        final Object schema = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[3]);
        return new Parameter(__typename, name, default_, schema);
      }
    }
  }
}
