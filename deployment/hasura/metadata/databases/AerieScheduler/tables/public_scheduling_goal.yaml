table:
  name: scheduling_goal
  schema: public
object_relationships:
  - name: scheduling_specification_goal
    using:
      foreign_key_constraint_on:
        column: goal_id
        table:
          name: scheduling_specification_goals
          schema: public
array_relationships:
- name: analyses
  using:
    foreign_key_constraint_on:
      column: goal_id
      table:
        name: scheduling_goal_analysis
        schema: public
- name: tags
  using:
    manual_configuration:
      remote_table:
        name: scheduling_goal_tags
        schema: metadata
      insertion_order: null
      column_mapping:
        id: goal_id
select_permissions:
  - role: aerie_admin
    permission:
      columns: [id, revision, name, definition, model_id, description, author, last_modified_by, created_date, modified_date]
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns: [id, revision, name, definition, model_id, description, author, last_modified_by, created_date, modified_date]
      filter: {}
      allow_aggregations: true
  - role: viewer
    permission:
      columns: [id, revision, name, definition, model_id, description, author, last_modified_by, created_date, modified_date]
      filter: {}
      allow_aggregations: true
# TODO: Modify these once we have a solution for cross-db auth (These permissions should be based on plan ownership/collaboratorship)
insert_permissions:
  - role: aerie_admin
    permission:
      columns: [name, definition, model_id, description]
      check: {}
      set:
        author: "x-hasura-user-id"
        last_modified_by: "x-hasura-user-id"
  - role: user
    permission:
      columns: [name, definition, model_id, description]
      check: {}
      set:
        author: "x-hasura-user-id"
        last_modified_by: "x-hasura-user-id"
update_permissions:
  - role: aerie_admin
    permission:
      columns: [name, definition, model_id, description]
      filter: {}
      set:
        last_modified_by: "x-hasura-user-id"
  - role: user
    permission:
      columns: [name, definition, description]
      filter: {}
      set:
        last_modified_by: "x-hasura-user-id"
delete_permissions:
  - role: aerie_admin
    permission:
      filter: {}
  - role: user
    permission:
      filter: {}
