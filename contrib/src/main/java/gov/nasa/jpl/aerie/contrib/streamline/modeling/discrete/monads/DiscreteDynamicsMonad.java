package gov.nasa.jpl.aerie.contrib.streamline.modeling.discrete.monads;

import gov.nasa.jpl.aerie.contrib.streamline.core.DynamicsEffect;
import gov.nasa.jpl.aerie.contrib.streamline.core.ErrorCatching;
import gov.nasa.jpl.aerie.contrib.streamline.core.Expiring;
import gov.nasa.jpl.aerie.contrib.streamline.core.monads.DynamicsMonad;
import gov.nasa.jpl.aerie.contrib.streamline.modeling.discrete.Discrete;
import gov.nasa.jpl.aerie.contrib.streamline.utils.*;
import org.apache.commons.lang3.function.TriFunction;

import java.util.function.BiFunction;
import java.util.function.Function;

import static gov.nasa.jpl.aerie.contrib.streamline.utils.FunctionalUtils.curry;

public final class DiscreteDynamicsMonad {
  private DiscreteDynamicsMonad() {}

  public static <A> ErrorCatching<Expiring<Discrete<A>>> pure(A a) {
    return DynamicsMonad.pure(DiscreteMonad.pure(a));
  }

  public static <A, B> ErrorCatching<Expiring<Discrete<B>>> apply(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<Function<A, B>>>> f) {
    return DynamicsMonad.apply(a, DynamicsMonad.map(f, DiscreteMonad::apply));
  }

  private static <A> ErrorCatching<Expiring<Discrete<A>>> distribute(Discrete<ErrorCatching<Expiring<A>>> a) {
    return DynamicsMonad.map(a.extract(), DiscreteMonad::pure);
  }

  public static <A> ErrorCatching<Expiring<Discrete<A>>> join(ErrorCatching<Expiring<Discrete<ErrorCatching<Expiring<Discrete<A>>>>>> a) {
    return DynamicsMonad.map(DynamicsMonad.join(DynamicsMonad.map(a, DiscreteDynamicsMonad::distribute)), DiscreteMonad::join);
  }

  // Not monadic, strictly speaking, but useful nonetheless.

  public static <A> DynamicsEffect<Discrete<A>> effect(Function<A, A> f) {
      return DynamicsMonad.effect(DiscreteMonad.map(f));
  }

  // GENERATED CODE START
  // Supplemental methods generated by generate_monad_methods.py on 2023-12-06.
  
  public static <A, B> Function<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>> apply(ErrorCatching<Expiring<Discrete<Function<A, B>>>> f) {
    return a -> apply(a, f);
  }
  
  public static <A, B> ErrorCatching<Expiring<Discrete<B>>> map(ErrorCatching<Expiring<Discrete<A>>> a, Function<A, B> f) {
    return apply(a, pure(f));
  }
  
  public static <A, B> Function<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>> map(Function<A, B> f) {
    return apply(pure(f));
  }
  
  public static <A, B> ErrorCatching<Expiring<Discrete<B>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, Function<A, ErrorCatching<Expiring<Discrete<B>>>> f) {
    return join(map(a, f));
  }
  
  public static <A, B> Function<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>> bind(Function<A, ErrorCatching<Expiring<Discrete<B>>>> f) {
    return a -> bind(a, f);
  }
  
  public static <A, B, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, BiFunction<A, B, Result> function) {
    return map(a, b, curry(function));
  }
  
  public static <A, B, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, Function<A, Function<B, Result>> function) {
    return apply(b, map(a, function));
  }
  
  public static <A, B, Result> BiFunction<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(BiFunction<A, B, Result> function) {
    return (a, b) -> map(a, b, function);
  }
  
  public static <A, B, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, BiFunction<A, B, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, function));
  }
  
  public static <A, B, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, Function<A, Function<B, ErrorCatching<Expiring<Discrete<Result>>>>> function) {
    return join(map(a, b, function));
  }
  
  public static <A, B, Result> BiFunction<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(BiFunction<A, B, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b) -> bind(a, b, function);
  }
  
  public static <A, B, C, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, TriFunction<A, B, C, Result> function) {
    return map(a, b, c, curry(function));
  }
  
  public static <A, B, C, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, Function<A, Function<B, Function<C, Result>>> function) {
    return apply(c, map(a, b, function));
  }
  
  public static <A, B, C, Result> TriFunction<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(TriFunction<A, B, C, Result> function) {
    return (a, b, c) -> map(a, b, c, function);
  }
  
  public static <A, B, C, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, TriFunction<A, B, C, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, function));
  }
  
  public static <A, B, C, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, Function<A, Function<B, Function<C, ErrorCatching<Expiring<Discrete<Result>>>>>> function) {
    return join(map(a, b, c, function));
  }
  
  public static <A, B, C, Result> TriFunction<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(TriFunction<A, B, C, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c) -> bind(a, b, c, function);
  }
  
  public static <A, B, C, D, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, Function4<A, B, C, D, Result> function) {
    return map(a, b, c, d, curry(function));
  }
  
  public static <A, B, C, D, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, Function<A, Function<B, Function<C, Function<D, Result>>>> function) {
    return apply(d, map(a, b, c, function));
  }
  
  public static <A, B, C, D, Result> Function4<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function4<A, B, C, D, Result> function) {
    return (a, b, c, d) -> map(a, b, c, d, function);
  }
  
  public static <A, B, C, D, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, Function4<A, B, C, D, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, Function<A, Function<B, Function<C, Function<D, ErrorCatching<Expiring<Discrete<Result>>>>>>> function) {
    return join(map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, Result> Function4<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function4<A, B, C, D, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d) -> bind(a, b, c, d, function);
  }
  
  public static <A, B, C, D, E, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, Function5<A, B, C, D, E, Result> function) {
    return map(a, b, c, d, e, curry(function));
  }
  
  public static <A, B, C, D, E, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, Function<A, Function<B, Function<C, Function<D, Function<E, Result>>>>> function) {
    return apply(e, map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, E, Result> Function5<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function5<A, B, C, D, E, Result> function) {
    return (a, b, c, d, e) -> map(a, b, c, d, e, function);
  }
  
  public static <A, B, C, D, E, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, Function5<A, B, C, D, E, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, Function<A, Function<B, Function<C, Function<D, Function<E, ErrorCatching<Expiring<Discrete<Result>>>>>>>> function) {
    return join(map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, Result> Function5<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function5<A, B, C, D, E, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e) -> bind(a, b, c, d, e, function);
  }
  
  public static <A, B, C, D, E, F, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, Function6<A, B, C, D, E, F, Result> function) {
    return map(a, b, c, d, e, f, curry(function));
  }
  
  public static <A, B, C, D, E, F, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Result>>>>>> function) {
    return apply(f, map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, F, Result> Function6<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function6<A, B, C, D, E, F, Result> function) {
    return (a, b, c, d, e, f) -> map(a, b, c, d, e, f, function);
  }
  
  public static <A, B, C, D, E, F, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, Function6<A, B, C, D, E, F, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, ErrorCatching<Expiring<Discrete<Result>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, Result> Function6<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function6<A, B, C, D, E, F, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f) -> bind(a, b, c, d, e, f, function);
  }
  
  public static <A, B, C, D, E, F, G, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, Function7<A, B, C, D, E, F, G, Result> function) {
    return map(a, b, c, d, e, f, g, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Result>>>>>>> function) {
    return apply(g, map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Function7<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function7<A, B, C, D, E, F, G, Result> function) {
    return (a, b, c, d, e, f, g) -> map(a, b, c, d, e, f, g, function);
  }
  
  public static <A, B, C, D, E, F, G, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, Function7<A, B, C, D, E, F, G, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Function7<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function7<A, B, C, D, E, F, G, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g) -> bind(a, b, c, d, e, f, g, function);
  }
  
  public static <A, B, C, D, E, F, G, H, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, Function8<A, B, C, D, E, F, G, H, Result> function) {
    return map(a, b, c, d, e, f, g, h, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Result>>>>>>>> function) {
    return apply(h, map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Function8<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function8<A, B, C, D, E, F, G, H, Result> function) {
    return (a, b, c, d, e, f, g, h) -> map(a, b, c, d, e, f, g, h, function);
  }
  
  public static <A, B, C, D, E, F, G, H, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, Function8<A, B, C, D, E, F, G, H, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Function8<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function8<A, B, C, D, E, F, G, H, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h) -> bind(a, b, c, d, e, f, g, h, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, Function9<A, B, C, D, E, F, G, H, I, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Result>>>>>>>>> function) {
    return apply(i, map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Function9<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function9<A, B, C, D, E, F, G, H, I, Result> function) {
    return (a, b, c, d, e, f, g, h, i) -> map(a, b, c, d, e, f, g, h, i, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, Function9<A, B, C, D, E, F, G, H, I, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Function9<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function9<A, B, C, D, E, F, G, H, I, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i) -> bind(a, b, c, d, e, f, g, h, i, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Result>>>>>>>>>> function) {
    return apply(j, map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j) -> map(a, b, c, d, e, f, g, h, i, j, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, Function10<A, B, C, D, E, F, G, H, I, J, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function10<A, B, C, D, E, F, G, H, I, J, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j) -> bind(a, b, c, d, e, f, g, h, i, j, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Result>>>>>>>>>>> function) {
    return apply(k, map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k) -> map(a, b, c, d, e, f, g, h, i, j, k, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, Function11<A, B, C, D, E, F, G, H, I, J, K, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function11<A, B, C, D, E, F, G, H, I, J, K, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k) -> bind(a, b, c, d, e, f, g, h, i, j, k, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Result>>>>>>>>>>>> function) {
    return apply(l, map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l) -> map(a, b, c, d, e, f, g, h, i, j, k, l, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function12<A, B, C, D, E, F, G, H, I, J, K, L, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Result>>>>>>>>>>>>> function) {
    return apply(m, map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Result>>>>>>>>>>>>>> function) {
    return apply(n, map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Result>>>>>>>>>>>>>>> function) {
    return apply(o, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Result>>>>>>>>>>>>>>>> function) {
    return apply(p, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Result>>>>>>>>>>>>>>>>> function) {
    return apply(q, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Result>>>>>>>>>>>>>>>>>> function) {
    return apply(r, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Result>>>>>>>>>>>>>>>>>>> function) {
    return apply(s, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<S>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<S>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, ErrorCatching<Expiring<Discrete<T>>> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> ErrorCatching<Expiring<Discrete<Result>>> map(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, ErrorCatching<Expiring<Discrete<T>>> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, Result>>>>>>>>>>>>>>>>>>>> function) {
    return apply(t, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<S>>>, ErrorCatching<Expiring<Discrete<T>>>, ErrorCatching<Expiring<Discrete<Result>>>> map(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, ErrorCatching<Expiring<Discrete<T>>> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> ErrorCatching<Expiring<Discrete<Result>>> bind(ErrorCatching<Expiring<Discrete<A>>> a, ErrorCatching<Expiring<Discrete<B>>> b, ErrorCatching<Expiring<Discrete<C>>> c, ErrorCatching<Expiring<Discrete<D>>> d, ErrorCatching<Expiring<Discrete<E>>> e, ErrorCatching<Expiring<Discrete<F>>> f, ErrorCatching<Expiring<Discrete<G>>> g, ErrorCatching<Expiring<Discrete<H>>> h, ErrorCatching<Expiring<Discrete<I>>> i, ErrorCatching<Expiring<Discrete<J>>> j, ErrorCatching<Expiring<Discrete<K>>> k, ErrorCatching<Expiring<Discrete<L>>> l, ErrorCatching<Expiring<Discrete<M>>> m, ErrorCatching<Expiring<Discrete<N>>> n, ErrorCatching<Expiring<Discrete<O>>> o, ErrorCatching<Expiring<Discrete<P>>> p, ErrorCatching<Expiring<Discrete<Q>>> q, ErrorCatching<Expiring<Discrete<R>>> r, ErrorCatching<Expiring<Discrete<S>>> s, ErrorCatching<Expiring<Discrete<T>>> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, ErrorCatching<Expiring<Discrete<Result>>>>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<ErrorCatching<Expiring<Discrete<A>>>, ErrorCatching<Expiring<Discrete<B>>>, ErrorCatching<Expiring<Discrete<C>>>, ErrorCatching<Expiring<Discrete<D>>>, ErrorCatching<Expiring<Discrete<E>>>, ErrorCatching<Expiring<Discrete<F>>>, ErrorCatching<Expiring<Discrete<G>>>, ErrorCatching<Expiring<Discrete<H>>>, ErrorCatching<Expiring<Discrete<I>>>, ErrorCatching<Expiring<Discrete<J>>>, ErrorCatching<Expiring<Discrete<K>>>, ErrorCatching<Expiring<Discrete<L>>>, ErrorCatching<Expiring<Discrete<M>>>, ErrorCatching<Expiring<Discrete<N>>>, ErrorCatching<Expiring<Discrete<O>>>, ErrorCatching<Expiring<Discrete<P>>>, ErrorCatching<Expiring<Discrete<Q>>>, ErrorCatching<Expiring<Discrete<R>>>, ErrorCatching<Expiring<Discrete<S>>>, ErrorCatching<Expiring<Discrete<T>>>, ErrorCatching<Expiring<Discrete<Result>>>> bind(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, ErrorCatching<Expiring<Discrete<Result>>>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
  }
  // GENERATED CODE END
}
