package gov.nasa.jpl.aerie.contrib.streamline.core.monads;

import gov.nasa.jpl.aerie.contrib.streamline.core.Expiring;
import gov.nasa.jpl.aerie.contrib.streamline.utils.*;
import org.apache.commons.lang3.function.TriFunction;

import java.util.function.BiFunction;
import java.util.function.Function;

import static gov.nasa.jpl.aerie.contrib.streamline.core.Expiring.expiring;
import static gov.nasa.jpl.aerie.contrib.streamline.core.Expiring.neverExpiring;
import static gov.nasa.jpl.aerie.contrib.streamline.utils.FunctionalUtils.curry;

/**
 * The {@link Expiring} monad, which demands derived values expire no later than their sources.
 */
public final class ExpiringMonad {
  private ExpiringMonad() {}

  public static <A> Expiring<A> pure(A a) {
    return neverExpiring(a);
  }

  public static <A, B> Expiring<B> apply(Expiring<A> a, Expiring<Function<A, B>> f) {
    return expiring(f.data().apply(a.data()), a.expiry().or(f.expiry()));
  }

  public static <A> Expiring<A> join(Expiring<Expiring<A>> a) {
    return expiring(a.data().data(), a.expiry().or(a.data().expiry()));
  }

  // GENERATED CODE START
  // Supplemental methods generated by generate_monad_methods.py on 2023-12-06.
  
  public static <A, B> Function<Expiring<A>, Expiring<B>> apply(Expiring<Function<A, B>> f) {
    return a -> apply(a, f);
  }
  
  public static <A, B> Expiring<B> map(Expiring<A> a, Function<A, B> f) {
    return apply(a, pure(f));
  }
  
  public static <A, B> Function<Expiring<A>, Expiring<B>> map(Function<A, B> f) {
    return apply(pure(f));
  }
  
  public static <A, B> Expiring<B> bind(Expiring<A> a, Function<A, Expiring<B>> f) {
    return join(map(a, f));
  }
  
  public static <A, B> Function<Expiring<A>, Expiring<B>> bind(Function<A, Expiring<B>> f) {
    return a -> bind(a, f);
  }
  
  public static <A, B, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, BiFunction<A, B, Result> function) {
    return map(a, b, curry(function));
  }
  
  public static <A, B, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Function<A, Function<B, Result>> function) {
    return apply(b, map(a, function));
  }
  
  public static <A, B, Result> BiFunction<Expiring<A>, Expiring<B>, Expiring<Result>> map(BiFunction<A, B, Result> function) {
    return (a, b) -> map(a, b, function);
  }
  
  public static <A, B, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, BiFunction<A, B, Expiring<Result>> function) {
    return join(map(a, b, function));
  }
  
  public static <A, B, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Function<A, Function<B, Expiring<Result>>> function) {
    return join(map(a, b, function));
  }
  
  public static <A, B, Result> BiFunction<Expiring<A>, Expiring<B>, Expiring<Result>> bind(BiFunction<A, B, Expiring<Result>> function) {
    return (a, b) -> bind(a, b, function);
  }
  
  public static <A, B, C, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, TriFunction<A, B, C, Result> function) {
    return map(a, b, c, curry(function));
  }
  
  public static <A, B, C, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Function<A, Function<B, Function<C, Result>>> function) {
    return apply(c, map(a, b, function));
  }
  
  public static <A, B, C, Result> TriFunction<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<Result>> map(TriFunction<A, B, C, Result> function) {
    return (a, b, c) -> map(a, b, c, function);
  }
  
  public static <A, B, C, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, TriFunction<A, B, C, Expiring<Result>> function) {
    return join(map(a, b, c, function));
  }
  
  public static <A, B, C, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Function<A, Function<B, Function<C, Expiring<Result>>>> function) {
    return join(map(a, b, c, function));
  }
  
  public static <A, B, C, Result> TriFunction<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<Result>> bind(TriFunction<A, B, C, Expiring<Result>> function) {
    return (a, b, c) -> bind(a, b, c, function);
  }
  
  public static <A, B, C, D, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Function4<A, B, C, D, Result> function) {
    return map(a, b, c, d, curry(function));
  }
  
  public static <A, B, C, D, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Function<A, Function<B, Function<C, Function<D, Result>>>> function) {
    return apply(d, map(a, b, c, function));
  }
  
  public static <A, B, C, D, Result> Function4<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<Result>> map(Function4<A, B, C, D, Result> function) {
    return (a, b, c, d) -> map(a, b, c, d, function);
  }
  
  public static <A, B, C, D, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Function4<A, B, C, D, Expiring<Result>> function) {
    return join(map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Function<A, Function<B, Function<C, Function<D, Expiring<Result>>>>> function) {
    return join(map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, Result> Function4<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<Result>> bind(Function4<A, B, C, D, Expiring<Result>> function) {
    return (a, b, c, d) -> bind(a, b, c, d, function);
  }
  
  public static <A, B, C, D, E, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Function5<A, B, C, D, E, Result> function) {
    return map(a, b, c, d, e, curry(function));
  }
  
  public static <A, B, C, D, E, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Function<A, Function<B, Function<C, Function<D, Function<E, Result>>>>> function) {
    return apply(e, map(a, b, c, d, function));
  }
  
  public static <A, B, C, D, E, Result> Function5<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<Result>> map(Function5<A, B, C, D, E, Result> function) {
    return (a, b, c, d, e) -> map(a, b, c, d, e, function);
  }
  
  public static <A, B, C, D, E, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Function5<A, B, C, D, E, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Function<A, Function<B, Function<C, Function<D, Function<E, Expiring<Result>>>>>> function) {
    return join(map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, Result> Function5<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<Result>> bind(Function5<A, B, C, D, E, Expiring<Result>> function) {
    return (a, b, c, d, e) -> bind(a, b, c, d, e, function);
  }
  
  public static <A, B, C, D, E, F, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Function6<A, B, C, D, E, F, Result> function) {
    return map(a, b, c, d, e, f, curry(function));
  }
  
  public static <A, B, C, D, E, F, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Result>>>>>> function) {
    return apply(f, map(a, b, c, d, e, function));
  }
  
  public static <A, B, C, D, E, F, Result> Function6<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<Result>> map(Function6<A, B, C, D, E, F, Result> function) {
    return (a, b, c, d, e, f) -> map(a, b, c, d, e, f, function);
  }
  
  public static <A, B, C, D, E, F, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Function6<A, B, C, D, E, F, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Expiring<Result>>>>>>> function) {
    return join(map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, Result> Function6<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<Result>> bind(Function6<A, B, C, D, E, F, Expiring<Result>> function) {
    return (a, b, c, d, e, f) -> bind(a, b, c, d, e, f, function);
  }
  
  public static <A, B, C, D, E, F, G, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Function7<A, B, C, D, E, F, G, Result> function) {
    return map(a, b, c, d, e, f, g, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Result>>>>>>> function) {
    return apply(g, map(a, b, c, d, e, f, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Function7<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<Result>> map(Function7<A, B, C, D, E, F, G, Result> function) {
    return (a, b, c, d, e, f, g) -> map(a, b, c, d, e, f, g, function);
  }
  
  public static <A, B, C, D, E, F, G, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Function7<A, B, C, D, E, F, G, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Expiring<Result>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, Result> Function7<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<Result>> bind(Function7<A, B, C, D, E, F, G, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g) -> bind(a, b, c, d, e, f, g, function);
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Function8<A, B, C, D, E, F, G, H, Result> function) {
    return map(a, b, c, d, e, f, g, h, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Result>>>>>>>> function) {
    return apply(h, map(a, b, c, d, e, f, g, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Function8<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<Result>> map(Function8<A, B, C, D, E, F, G, H, Result> function) {
    return (a, b, c, d, e, f, g, h) -> map(a, b, c, d, e, f, g, h, function);
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Function8<A, B, C, D, E, F, G, H, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Expiring<Result>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, Result> Function8<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<Result>> bind(Function8<A, B, C, D, E, F, G, H, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h) -> bind(a, b, c, d, e, f, g, h, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Function9<A, B, C, D, E, F, G, H, I, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Result>>>>>>>>> function) {
    return apply(i, map(a, b, c, d, e, f, g, h, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Function9<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<Result>> map(Function9<A, B, C, D, E, F, G, H, I, Result> function) {
    return (a, b, c, d, e, f, g, h, i) -> map(a, b, c, d, e, f, g, h, i, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Function9<A, B, C, D, E, F, G, H, I, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Expiring<Result>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, Result> Function9<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<Result>> bind(Function9<A, B, C, D, E, F, G, H, I, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i) -> bind(a, b, c, d, e, f, g, h, i, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Result>>>>>>>>>> function) {
    return apply(j, map(a, b, c, d, e, f, g, h, i, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<Result>> map(Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j) -> map(a, b, c, d, e, f, g, h, i, j, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Function10<A, B, C, D, E, F, G, H, I, J, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Expiring<Result>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<Result>> bind(Function10<A, B, C, D, E, F, G, H, I, J, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j) -> bind(a, b, c, d, e, f, g, h, i, j, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Result>>>>>>>>>>> function) {
    return apply(k, map(a, b, c, d, e, f, g, h, i, j, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<Result>> map(Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k) -> map(a, b, c, d, e, f, g, h, i, j, k, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Function11<A, B, C, D, E, F, G, H, I, J, K, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Expiring<Result>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<Result>> bind(Function11<A, B, C, D, E, F, G, H, I, J, K, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k) -> bind(a, b, c, d, e, f, g, h, i, j, k, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Result>>>>>>>>>>>> function) {
    return apply(l, map(a, b, c, d, e, f, g, h, i, j, k, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<Result>> map(Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l) -> map(a, b, c, d, e, f, g, h, i, j, k, l, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Expiring<Result>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<Result>> bind(Function12<A, B, C, D, E, F, G, H, I, J, K, L, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Result>>>>>>>>>>>>> function) {
    return apply(m, map(a, b, c, d, e, f, g, h, i, j, k, l, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<Result>> map(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Expiring<Result>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<Result>> bind(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Result>>>>>>>>>>>>>> function) {
    return apply(n, map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<Result>> map(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Expiring<Result>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<Result>> bind(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Result>>>>>>>>>>>>>>> function) {
    return apply(o, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<Result>> map(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Expiring<Result>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<Result>> bind(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Result>>>>>>>>>>>>>>>> function) {
    return apply(p, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Result>> map(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Expiring<Result>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Result>> bind(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Result>>>>>>>>>>>>>>>>> function) {
    return apply(q, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<Result>> map(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Expiring<Result>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<Result>> bind(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Result>>>>>>>>>>>>>>>>>> function) {
    return apply(r, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<Result>> map(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Expiring<Result>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<Result>> bind(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Result>>>>>>>>>>>>>>>>>>> function) {
    return apply(s, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<S>, Expiring<Result>> map(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Expiring<Result>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<S>, Expiring<Result>> bind(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Expiring<T> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
    return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, curry(function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Expiring<Result> map(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Expiring<T> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, Result>>>>>>>>>>>>>>>>>>>> function) {
    return apply(t, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<S>, Expiring<T>, Expiring<Result>> map(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Expiring<T> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Expiring<Result>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Expiring<Result> bind(Expiring<A> a, Expiring<B> b, Expiring<C> c, Expiring<D> d, Expiring<E> e, Expiring<F> f, Expiring<G> g, Expiring<H> h, Expiring<I> i, Expiring<J> j, Expiring<K> k, Expiring<L> l, Expiring<M> m, Expiring<N> n, Expiring<O> o, Expiring<P> p, Expiring<Q> q, Expiring<R> r, Expiring<S> s, Expiring<T> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, Expiring<Result>>>>>>>>>>>>>>>>>>>>> function) {
    return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
  }
  
  public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<Expiring<A>, Expiring<B>, Expiring<C>, Expiring<D>, Expiring<E>, Expiring<F>, Expiring<G>, Expiring<H>, Expiring<I>, Expiring<J>, Expiring<K>, Expiring<L>, Expiring<M>, Expiring<N>, Expiring<O>, Expiring<P>, Expiring<Q>, Expiring<R>, Expiring<S>, Expiring<T>, Expiring<Result>> bind(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Expiring<Result>> function) {
    return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
  }
  // GENERATED CODE END
}
