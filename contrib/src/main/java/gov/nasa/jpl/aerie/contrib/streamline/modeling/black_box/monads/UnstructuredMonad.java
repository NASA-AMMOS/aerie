package gov.nasa.jpl.aerie.contrib.streamline.modeling.black_box.monads;

import gov.nasa.jpl.aerie.contrib.streamline.core.Dynamics;
import gov.nasa.jpl.aerie.contrib.streamline.modeling.black_box.Unstructured;
import gov.nasa.jpl.aerie.contrib.streamline.utils.*;
import gov.nasa.jpl.aerie.merlin.protocol.types.Duration;
import org.apache.commons.lang3.function.TriFunction;

import java.util.function.BiFunction;
import java.util.function.Function;

import static gov.nasa.jpl.aerie.contrib.streamline.utils.FunctionalUtils.curry;

/**
 * The {@link Unstructured} monad
 */
public final class UnstructuredMonad {
    private UnstructuredMonad() {}

    public static <A> Unstructured<A> pure(A a) {
        return Unstructured.constant(a);
    }

    public static <A, B> Unstructured<B> apply(Dynamics<A, ?> a, Dynamics<Function<A, B>, ?> f) {
        return new Unstructured<>() {
            @Override
            public B extract() {
                return f.extract().apply(a.extract());
            }

            @Override
            public Unstructured<B> step(Duration t) {
                return apply(a.step(t), f.step(t));
            }
        };
    }

    public static <A> Unstructured<A> join(Dynamics<? extends Dynamics<A, ?>, ?> a) {
        return new Unstructured<>() {
            @Override
            public A extract() {
                return a.extract().extract();
            }

            @Override
            public Unstructured<A> step(Duration t) {
                return join(a.step(t));
            }
        };
    }

    // GENERATED CODE START
    // Supplemental methods generated by generate_monad_methods.py on 2023-12-06.
    
    public static <A, B> Function<Unstructured<A>, Unstructured<B>> apply(Unstructured<Function<A, B>> f) {
      return a -> apply(a, f);
    }
    
    public static <A, B> Unstructured<B> map(Unstructured<A> a, Function<A, B> f) {
      return apply(a, pure(f));
    }
    
    public static <A, B> Function<Unstructured<A>, Unstructured<B>> map(Function<A, B> f) {
      return apply(pure(f));
    }
    
    public static <A, B> Unstructured<B> bind(Unstructured<A> a, Function<A, Unstructured<B>> f) {
      return join(map(a, f));
    }
    
    public static <A, B> Function<Unstructured<A>, Unstructured<B>> bind(Function<A, Unstructured<B>> f) {
      return a -> bind(a, f);
    }
    
    public static <A, B, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, BiFunction<A, B, Result> function) {
      return map(a, b, curry(function));
    }
    
    public static <A, B, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Function<A, Function<B, Result>> function) {
      return apply(b, map(a, function));
    }
    
    public static <A, B, Result> BiFunction<Unstructured<A>, Unstructured<B>, Unstructured<Result>> map(BiFunction<A, B, Result> function) {
      return (a, b) -> map(a, b, function);
    }
    
    public static <A, B, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, BiFunction<A, B, Unstructured<Result>> function) {
      return join(map(a, b, function));
    }
    
    public static <A, B, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Function<A, Function<B, Unstructured<Result>>> function) {
      return join(map(a, b, function));
    }
    
    public static <A, B, Result> BiFunction<Unstructured<A>, Unstructured<B>, Unstructured<Result>> bind(BiFunction<A, B, Unstructured<Result>> function) {
      return (a, b) -> bind(a, b, function);
    }
    
    public static <A, B, C, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, TriFunction<A, B, C, Result> function) {
      return map(a, b, c, curry(function));
    }
    
    public static <A, B, C, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Function<A, Function<B, Function<C, Result>>> function) {
      return apply(c, map(a, b, function));
    }
    
    public static <A, B, C, Result> TriFunction<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<Result>> map(TriFunction<A, B, C, Result> function) {
      return (a, b, c) -> map(a, b, c, function);
    }
    
    public static <A, B, C, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, TriFunction<A, B, C, Unstructured<Result>> function) {
      return join(map(a, b, c, function));
    }
    
    public static <A, B, C, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Function<A, Function<B, Function<C, Unstructured<Result>>>> function) {
      return join(map(a, b, c, function));
    }
    
    public static <A, B, C, Result> TriFunction<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<Result>> bind(TriFunction<A, B, C, Unstructured<Result>> function) {
      return (a, b, c) -> bind(a, b, c, function);
    }
    
    public static <A, B, C, D, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Function4<A, B, C, D, Result> function) {
      return map(a, b, c, d, curry(function));
    }
    
    public static <A, B, C, D, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Function<A, Function<B, Function<C, Function<D, Result>>>> function) {
      return apply(d, map(a, b, c, function));
    }
    
    public static <A, B, C, D, Result> Function4<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<Result>> map(Function4<A, B, C, D, Result> function) {
      return (a, b, c, d) -> map(a, b, c, d, function);
    }
    
    public static <A, B, C, D, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Function4<A, B, C, D, Unstructured<Result>> function) {
      return join(map(a, b, c, d, function));
    }
    
    public static <A, B, C, D, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Function<A, Function<B, Function<C, Function<D, Unstructured<Result>>>>> function) {
      return join(map(a, b, c, d, function));
    }
    
    public static <A, B, C, D, Result> Function4<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<Result>> bind(Function4<A, B, C, D, Unstructured<Result>> function) {
      return (a, b, c, d) -> bind(a, b, c, d, function);
    }
    
    public static <A, B, C, D, E, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Function5<A, B, C, D, E, Result> function) {
      return map(a, b, c, d, e, curry(function));
    }
    
    public static <A, B, C, D, E, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Function<A, Function<B, Function<C, Function<D, Function<E, Result>>>>> function) {
      return apply(e, map(a, b, c, d, function));
    }
    
    public static <A, B, C, D, E, Result> Function5<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<Result>> map(Function5<A, B, C, D, E, Result> function) {
      return (a, b, c, d, e) -> map(a, b, c, d, e, function);
    }
    
    public static <A, B, C, D, E, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Function5<A, B, C, D, E, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, function));
    }
    
    public static <A, B, C, D, E, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Function<A, Function<B, Function<C, Function<D, Function<E, Unstructured<Result>>>>>> function) {
      return join(map(a, b, c, d, e, function));
    }
    
    public static <A, B, C, D, E, Result> Function5<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<Result>> bind(Function5<A, B, C, D, E, Unstructured<Result>> function) {
      return (a, b, c, d, e) -> bind(a, b, c, d, e, function);
    }
    
    public static <A, B, C, D, E, F, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Function6<A, B, C, D, E, F, Result> function) {
      return map(a, b, c, d, e, f, curry(function));
    }
    
    public static <A, B, C, D, E, F, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Result>>>>>> function) {
      return apply(f, map(a, b, c, d, e, function));
    }
    
    public static <A, B, C, D, E, F, Result> Function6<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<Result>> map(Function6<A, B, C, D, E, F, Result> function) {
      return (a, b, c, d, e, f) -> map(a, b, c, d, e, f, function);
    }
    
    public static <A, B, C, D, E, F, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Function6<A, B, C, D, E, F, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, function));
    }
    
    public static <A, B, C, D, E, F, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Unstructured<Result>>>>>>> function) {
      return join(map(a, b, c, d, e, f, function));
    }
    
    public static <A, B, C, D, E, F, Result> Function6<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<Result>> bind(Function6<A, B, C, D, E, F, Unstructured<Result>> function) {
      return (a, b, c, d, e, f) -> bind(a, b, c, d, e, f, function);
    }
    
    public static <A, B, C, D, E, F, G, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Function7<A, B, C, D, E, F, G, Result> function) {
      return map(a, b, c, d, e, f, g, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Result>>>>>>> function) {
      return apply(g, map(a, b, c, d, e, f, function));
    }
    
    public static <A, B, C, D, E, F, G, Result> Function7<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<Result>> map(Function7<A, B, C, D, E, F, G, Result> function) {
      return (a, b, c, d, e, f, g) -> map(a, b, c, d, e, f, g, function);
    }
    
    public static <A, B, C, D, E, F, G, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Function7<A, B, C, D, E, F, G, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, function));
    }
    
    public static <A, B, C, D, E, F, G, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Unstructured<Result>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, function));
    }
    
    public static <A, B, C, D, E, F, G, Result> Function7<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<Result>> bind(Function7<A, B, C, D, E, F, G, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g) -> bind(a, b, c, d, e, f, g, function);
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Function8<A, B, C, D, E, F, G, H, Result> function) {
      return map(a, b, c, d, e, f, g, h, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Result>>>>>>>> function) {
      return apply(h, map(a, b, c, d, e, f, g, function));
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Function8<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<Result>> map(Function8<A, B, C, D, E, F, G, H, Result> function) {
      return (a, b, c, d, e, f, g, h) -> map(a, b, c, d, e, f, g, h, function);
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Function8<A, B, C, D, E, F, G, H, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, function));
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Unstructured<Result>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, function));
    }
    
    public static <A, B, C, D, E, F, G, H, Result> Function8<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<Result>> bind(Function8<A, B, C, D, E, F, G, H, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h) -> bind(a, b, c, d, e, f, g, h, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Function9<A, B, C, D, E, F, G, H, I, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Result>>>>>>>>> function) {
      return apply(i, map(a, b, c, d, e, f, g, h, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Function9<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<Result>> map(Function9<A, B, C, D, E, F, G, H, I, Result> function) {
      return (a, b, c, d, e, f, g, h, i) -> map(a, b, c, d, e, f, g, h, i, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Function9<A, B, C, D, E, F, G, H, I, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Unstructured<Result>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, Result> Function9<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<Result>> bind(Function9<A, B, C, D, E, F, G, H, I, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i) -> bind(a, b, c, d, e, f, g, h, i, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Result>>>>>>>>>> function) {
      return apply(j, map(a, b, c, d, e, f, g, h, i, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<Result>> map(Function10<A, B, C, D, E, F, G, H, I, J, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j) -> map(a, b, c, d, e, f, g, h, i, j, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Function10<A, B, C, D, E, F, G, H, I, J, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Unstructured<Result>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, Result> Function10<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<Result>> bind(Function10<A, B, C, D, E, F, G, H, I, J, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j) -> bind(a, b, c, d, e, f, g, h, i, j, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Result>>>>>>>>>>> function) {
      return apply(k, map(a, b, c, d, e, f, g, h, i, j, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<Result>> map(Function11<A, B, C, D, E, F, G, H, I, J, K, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k) -> map(a, b, c, d, e, f, g, h, i, j, k, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Function11<A, B, C, D, E, F, G, H, I, J, K, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Unstructured<Result>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, Result> Function11<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<Result>> bind(Function11<A, B, C, D, E, F, G, H, I, J, K, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k) -> bind(a, b, c, d, e, f, g, h, i, j, k, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Result>>>>>>>>>>>> function) {
      return apply(l, map(a, b, c, d, e, f, g, h, i, j, k, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<Result>> map(Function12<A, B, C, D, E, F, G, H, I, J, K, L, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l) -> map(a, b, c, d, e, f, g, h, i, j, k, l, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Function12<A, B, C, D, E, F, G, H, I, J, K, L, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Unstructured<Result>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, Result> Function12<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<Result>> bind(Function12<A, B, C, D, E, F, G, H, I, J, K, L, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Result>>>>>>>>>>>>> function) {
      return apply(m, map(a, b, c, d, e, f, g, h, i, j, k, l, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<Result>> map(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Unstructured<Result>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, Result> Function13<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<Result>> bind(Function13<A, B, C, D, E, F, G, H, I, J, K, L, M, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Result>>>>>>>>>>>>>> function) {
      return apply(n, map(a, b, c, d, e, f, g, h, i, j, k, l, m, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<Result>> map(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Unstructured<Result>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, Result> Function14<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<Result>> bind(Function14<A, B, C, D, E, F, G, H, I, J, K, L, M, N, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Result>>>>>>>>>>>>>>> function) {
      return apply(o, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<Result>> map(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Unstructured<Result>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Result> Function15<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<Result>> bind(Function15<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Result>>>>>>>>>>>>>>>> function) {
      return apply(p, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Result>> map(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Unstructured<Result>>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Result> Function16<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Result>> bind(Function16<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Result>>>>>>>>>>>>>>>>> function) {
      return apply(q, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<Result>> map(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Unstructured<Result>>>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Result> Function17<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<Result>> bind(Function17<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Result>>>>>>>>>>>>>>>>>> function) {
      return apply(r, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<Result>> map(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Unstructured<Result>>>>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Result> Function18<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<Result>> bind(Function18<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Result>>>>>>>>>>>>>>>>>>> function) {
      return apply(s, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<S>, Unstructured<Result>> map(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Unstructured<Result>>>>>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Result> Function19<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<S>, Unstructured<Result>> bind(Function19<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Unstructured<T> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
      return map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, curry(function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Unstructured<Result> map(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Unstructured<T> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, Result>>>>>>>>>>>>>>>>>>>> function) {
      return apply(t, map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<S>, Unstructured<T>, Unstructured<Result>> map(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Unstructured<T> t, Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Unstructured<Result>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Unstructured<Result> bind(Unstructured<A> a, Unstructured<B> b, Unstructured<C> c, Unstructured<D> d, Unstructured<E> e, Unstructured<F> f, Unstructured<G> g, Unstructured<H> h, Unstructured<I> i, Unstructured<J> j, Unstructured<K> k, Unstructured<L> l, Unstructured<M> m, Unstructured<N> n, Unstructured<O> o, Unstructured<P> p, Unstructured<Q> q, Unstructured<R> r, Unstructured<S> s, Unstructured<T> t, Function<A, Function<B, Function<C, Function<D, Function<E, Function<F, Function<G, Function<H, Function<I, Function<J, Function<K, Function<L, Function<M, Function<N, Function<O, Function<P, Function<Q, Function<R, Function<S, Function<T, Unstructured<Result>>>>>>>>>>>>>>>>>>>>> function) {
      return join(map(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function));
    }
    
    public static <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Result> Function20<Unstructured<A>, Unstructured<B>, Unstructured<C>, Unstructured<D>, Unstructured<E>, Unstructured<F>, Unstructured<G>, Unstructured<H>, Unstructured<I>, Unstructured<J>, Unstructured<K>, Unstructured<L>, Unstructured<M>, Unstructured<N>, Unstructured<O>, Unstructured<P>, Unstructured<Q>, Unstructured<R>, Unstructured<S>, Unstructured<T>, Unstructured<Result>> bind(Function20<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Unstructured<Result>> function) {
      return (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) -> bind(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, function);
    }
    // GENERATED CODE END
}
